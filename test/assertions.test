#!/bin/sh -fu

if ! which shunit2 > /dev/null; then
  echo "shunit2 not found in PATH. Aborting tests"
  exit 2
fi

. $(dirname $0)/../libshell-assertions

testAssert() {
  assertEquals "" "$(assert message bar bar 2>&1)"
  assertEquals "ASSERTION FAILED: message expected: <foo> but was <bar>" "$(assert message foo bar 2>&1)"
  assertEquals "ASSERTION FAILED: message expected: <foo> but was <bar>" "$(assert message foo bar 1 2>&1)"

  # test exit codes
  ( assert message foo foo 2> /dev/null >/dev/null )
  assertTrue "null exit code" $? 
  ( assert message foo bar 2> /dev/null >/dev/null )
  assertTrue "null exit code" $? 
  ( assert message foo bar 1 2> /dev/null >/dev/null )
  assertFalse "non-null exit code" $? 
}

testAssertNot() {
  assertEquals "" "$(assert_not message foo bar 2>&1)"
  assertEquals "ASSERTION FAILED: message expected not to be <bar>" "$(assert_not message bar bar 2>&1)"
  assertEquals "ASSERTION FAILED: message expected not to be <bar>" "$(assert_not message bar bar 1 2>&1)"

  # test exit codes
  ( assert_not message foo bar 2> /dev/null >/dev/null )
  assertTrue "null exit code" $? 
  ( assert_not message foo foo 2> /dev/null >/dev/null )
  assertTrue "null exit code" $? 
  ( assert_not message foo foo 1 2> /dev/null >/dev/null )
  assertFalse "non-null exit code" $? 
}

. shunit2

